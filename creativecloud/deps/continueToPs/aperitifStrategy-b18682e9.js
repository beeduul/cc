class g{static async pollJobStatus(t,e,i){const r={headers:{Authorization:`Bearer ${t}`,"content-type":"application/json","x-api-key":`${e}`}},a=1e3;let s,o;const h=new Promise((c,u)=>{s=c,o=u}),d=async()=>{const c=await fetch(i,r);if(c.ok){const u=await c.json(),{status:w}=u;w==="succeeded"?s(u):w==="failed"?o(u):setTimeout(d,a)}else o("poll failure")};return d(),h}}const k={operation:"sensei/mask",method:"POST"};class p{static init(t,e){this.endpoint=t,this.apiKey=e}static assertInitialized(){if(!this.endpoint)throw new Error("aperitif endpoint not initialized");if(!this.apiKey)throw new Error("aperitif apiKey not initialized")}static async token(t){try{this.assertInitialized();const e=`${this.endpoint}/token`,i={method:"GET",headers:{"x-api-key":this.apiKey,"x-recaptcha-token":t}},r=await fetch(e,i);if(r.status!==200)return Promise.reject(r);const a=await r.json();if(a?.status!=="succeeded")return Promise.reject(a);const s=a,{expiresAt:o,userToken:h}=s.outputs;return[Number.parseInt(o,10),h]}catch(e){return Promise.reject(e)}}static async storage(t,e){this.assertInitialized();const i=`${this.endpoint}/storage?num=${t}`,r={method:"GET",headers:{"x-api-key":this.apiKey,Authorization:e}},a=await fetch(i,r),s=await a.json();if(a.status===200)return s.outputs.urls;throw new Error(s)}static async upload(t,e){await fetch(t,{method:"PUT",headers:{},body:e})}static async mask(t,e){const i={input:{storage:"external",href:e[0].get},options:{optimize:"performance",process:{postprocess:!0}},output:{href:e[1].put,storage:"external",mask:{format:"binary"}}},r=await this.operation(k,t,i);return g.pollJobStatus(t,this.apiKey,r)}static async operation(t,e,i){const r=`${this.endpoint}/operation/${t.operation}`,a={method:t.method,headers:{"x-api-key":this.apiKey,Authorization:`Bearer ${e}`,"Content-Type":"application/json"},body:JSON.stringify(i)},s=await fetch(r,a),o=await s.json();if(s.status===200)return o._links.self.href;throw new Error(o)}}let f="",l;function T(n,t){return l?Promise.reject(new Error("Recaptcha already rendered.")):new Promise(e=>{f=n;const i=document.createElement("script");i.addEventListener("load",()=>window.grecaptcha.ready(()=>{l=window.grecaptcha.render(t,{sitekey:f,badge:"bottomright",size:"invisible"}),e()})),i.src="https://www.google.com/recaptcha/api.js?render=explicit",document.body.appendChild(i)})}function P(){return new Promise(n=>{window.grecaptcha.ready(()=>{window.grecaptcha.execute(l,{action:"submit"}).then(t=>n(t))})})}const m=1e3*60/2,U=1e3*60*2-m,y=1e3*60*10-m,I=1e3*60*10-m;class b{constructor(t){this.pair=t}getUrl(){return this.pair.get}putUrl(){return this.pair.put}}function x(n){return new Promise(t=>{if(!document.querySelector("#recaptcha-badge")){const e=document.createElement("div");e.id="recaptcha-badge",document.body.appendChild(e),T(n,e).then(()=>{t()})}})}class O{constructor(){this.recaptchaToken="",this.aperitifToken="",this.inputImageUrl=null,this.outputImageUrl=null,this.recaptchaTokenPromise=Promise.resolve(),this.aperitifTokenPromise=Promise.resolve(),this.uploadedPromise=Promise.resolve(),this.freshOutputPromise=Promise.resolve()}static init(t,e,i){return p.init(t,i),x(e)}async mask(t){const{inputImageUrl:e,outputImageUrl:i}=await this.ensureFreshOutput(t),r=[e,i];await p.mask(this.aperitifToken,r);const a=i.get;return await(await fetch(a)).blob()}async ensureFreshOutput(t){let e=()=>{};try{if(await this.ensureUploaded(t),this.freshOutputPromise&&await this.freshOutputPromise,this.outputImageUrl){const r=this.inputImageUrl,a=this.outputImageUrl;return this.resetOutputImageUrl(),{inputImageUrl:r,outputImageUrl:a}}this.freshOutputPromise=new Promise(r=>{e=r});const[i]=await p.storage(1,this.aperitifToken);return setTimeout(this.resetOutputImageUrl.bind(this),I),{inputImageUrl:this.inputImageUrl,outputImageUrl:i}}finally{e()}}async upload(t){return this.ensureUploaded(t)}async ensureUploaded(t){let e=()=>{};try{if(await this.ensureStorageReady(),await this.uploadedPromise,this.inputImageUrl)return;this.uploadedPromise=new Promise(a=>{e=a});const[i,r]=await p.storage(2,this.aperitifToken);await fetch(i.put,{method:"PUT",body:t}),this.inputImageUrl=i,this.outputImageUrl=r,setTimeout(()=>{this.resetInputImageUrl(),this.resetOutputImageUrl()},y)}finally{e()}}async prepareStorage(t){return await this.ensureStorageReady(),(await p.storage(t+1,this.aperitifToken)).map(e=>new b(e))}async ensureStorageReady(){let t=()=>{};try{if(await this.ensureRecaptcha(),await this.aperitifTokenPromise,this.aperitifToken)return;this.aperitifTokenPromise=new Promise(s=>{t=s});const e=Date.now(),[i,r]=await p.token(this.recaptchaToken),a=Date.now();i<e||a>i,this.aperitifToken=r,setTimeout(this.resetAperitifToken.bind(this),y)}finally{t()}}async ensureRecaptcha(){let t=()=>{};try{if(await this.recaptchaTokenPromise,this.recaptchaToken)return;this.recaptchaTokenPromise=new Promise(i=>{t=i});const e=await P();this.recaptchaToken=e,setTimeout(this.resetRecaptchaToken.bind(this),U)}finally{t()}}resetRecaptchaToken(){this.recaptchaToken=""}resetAperitifToken(){this.aperitifToken=""}resetInputImageUrl(){this.inputImageUrl=null}resetOutputImageUrl(){this.outputImageUrl=null}}export{O as AperitifStrategy};
